version: '3.9'

services:
  web:
    build: .
    ports:
      - 8000:8000
    environment:
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      admin_username: ${admin_username}
      admin_password: ${admin_password}
      DEBUG: ${DEBUG}
      SECRET_KEY: ${SECRET_KEY}
      ALLOWED_HOSTS: localhost,127.0.0.1,0.0.0.0
    volumes:
      - ./src:/app/src
      - static_volume:/app/src/staticfiles
      - media_volume:/app/src/media
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:15
    environment:
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      POSTGRES_DB: portfolio_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    
volumes:
  postgres_data:
  static_volume:
  media_volume:
